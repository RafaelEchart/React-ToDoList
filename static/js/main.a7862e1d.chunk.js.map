{"version":3,"sources":["components/Header.js","components/InputToDo.js","components/ToDoItem.js","components/ToDoList.js","components/ToDoContainer.js","reportWebVitals.js","pages/SinglePage.js","pages/About.js","pages/NotMatch.js","components/Navbar.js","index.js"],"names":["Header","className","InputToDo","props","useState","inputValue","setInputValue","addTodoProps","onSubmit","e","preventDefault","trim","alert","type","placeholder","name","value","onChange","target","ToDoItem","editing","setEditing","toDo","id","title","completed","viewMode","editMode","display","onDoubleClick","style","checked","handleChangeProps","onClick","deleteTodoProps","fontStyle","color","opacity","textDecoration","setUpdateProps","onKeyDown","event","key","ToDoList","Fragment","data","map","ToDoContainer","todoList","setTodoList","useEffect","localStorageMemory","JSON","parse","localStorage","getItem","length","newToDo","uuidv4","prevState","push","setItem","stringify","tempNewMemory","newState","toDoItem","newTaskList","filter","updatedTitle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SinglePage","section","useParams","aboutContent","description","find","item","About","useRouteMatch","url","path","to","NotMatch","Navbar","navbarOpen","setNavbarOpen","width","height","text","link","activeclassname","ReactDOM","render","StrictMode","basename","process","component","document","getElementById"],"mappings":"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","file":"static/js/main.a7862e1d.chunk.js","sourcesContent":["const Header = () => {\r\n    return (\r\n      <header className=\"header\">\r\n        <h1 className=\"header-h1\">To Do List</h1>\r\n      </header>\r\n    )\r\n  }\r\n  \r\n  export default Header","import { useState } from \"react\";\r\nimport { AiOutlinePlus } from \"react-icons/ai\"\r\n\r\nconst InputToDo = (props) => {\r\n\r\nconst [ inputValue, setInputValue ] = useState(\"\")\r\n\r\nconst {addTodoProps} = props\r\n\r\nconst newInputValueHandler = (e) => {\r\n    setInputValue(e.target.value)\r\n}\r\n\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(inputValue.trim()){\r\n        addTodoProps(inputValue)\r\n        setInputValue('')\r\n    } else {\r\n        alert(\"Please do not leave an empty task!\")\r\n    }\r\n    \r\n}\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form-container\">\r\n     <input type=\"text\" className=\"input-text\" placeholder=\"Add Todo...\" name=\"inputValue\" value={inputValue} onChange={newInputValueHandler} />\r\n        <button className=\"input-submit\"><AiOutlinePlus/></button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default InputToDo;\r\n","import { useState } from \"react\";\r\nimport { FaTrash } from \"react-icons/fa\"\r\nconst ToDoItem = (props) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const { id, title, completed } = props.toDo;\r\n\r\n  const completedStyle = {\r\n    fontStyle: \"italic\",\r\n    color: \"#595959\",\r\n    opacity: 0.4,\r\n    textDecoration: \"line-through\",\r\n  };\r\n\r\n  const handleEditing = () => {\r\n    setEditing(true);\r\n  };\r\n\r\n  let viewMode = {};\r\n  let editMode = {};\r\n\r\n  if (editing) {\r\n    viewMode.display = \"none\";\r\n  } else {\r\n    editMode.display = \"none\";\r\n  }\r\n\r\n  const handleUpdatedDone = event => {\r\n    if (event.key === \"Enter\") {\r\n      setEditing(false);\r\n    }\r\n  }\r\n  return (\r\n    <li className=\"item\">\r\n      <div onDoubleClick={handleEditing} style={viewMode}>\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"checkbox\"\r\n          checked={completed}\r\n          onChange={() => props.handleChangeProps(id)}\r\n        />\r\n\r\n        <button onClick={() => props.deleteTodoProps(id)}><FaTrash/></button>\r\n        <span style={completed ? completedStyle : null}>{title}</span>\r\n      </div>\r\n      <input type=\"text\" value={title} style={editMode} className=\"textInput\" onChange={ e => props.setUpdateProps(e.target.value, id)} onKeyDown={handleUpdatedDone}/>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ToDoItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ToDoItem from './ToDoItem';\r\nconst ToDoList = (props) =>{\r\n    \r\n   \r\n\r\n    \r\n    return (\r\n    <React.Fragment>\r\n       {props.data.map((toDo)=>(\r\n        <ToDoItem key={toDo.id} toDo={toDo} handleChangeProps={props.handleChangeProps} deleteTodoProps={props.deleteTodoProps} setUpdateProps={props.setUpdateProps} />\r\n       ))}\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ToDoList;","import React, { useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Header from \"./Header\";\r\nimport InputToDo from \"./InputToDo\";\r\nimport ToDoList from \"./ToDoList\";\r\n\r\n\r\nconst ToDoContainer = () => {\r\n  const [todoList, setTodoList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const localStorageMemory = JSON.parse(localStorage.getItem(\"dataTasks\"));\r\n\r\n    if (localStorageMemory && localStorageMemory.length) {\r\n      setTodoList(localStorageMemory);\r\n    } else {\r\n      setTodoList([]);\r\n    }\r\n  }, []);\r\n\r\n  const handleChange = (id) => {\r\n    setTodoList((prevState) => {\r\n      let newState = prevState.map((toDoItem) => {\r\n        if (toDoItem.id === id) {\r\n          return {\r\n            ...toDoItem,\r\n            completed: !toDoItem.completed,\r\n          };\r\n        }\r\n        return toDoItem;\r\n      });\r\n\r\n      localStorage.setItem(\"dataTasks\", JSON.stringify(newState));\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  const deleteToDo = (id) => {\r\n    const newTaskList = todoList.filter((toDoItem) => toDoItem.id !== id);\r\n    setTodoList(newTaskList);\r\n    localStorage.setItem(\"dataTasks\", JSON.stringify(newTaskList));\r\n  };\r\n\r\n  const addTodoItem = (title) => {\r\n    const newToDo = {\r\n      id: uuidv4(),\r\n      title: title,\r\n      completed: false,\r\n    };\r\n    setTodoList((prevState) => [...prevState, newToDo]);\r\n\r\n    const localStorageMemory = JSON.parse(localStorage.getItem(\"dataTasks\"));\r\n\r\n    if (localStorageMemory && localStorageMemory.length) {\r\n      localStorageMemory.push(newToDo);\r\n      localStorage.setItem(\"dataTasks\", JSON.stringify(localStorageMemory));\r\n    } else {\r\n      let tempNewMemory = [newToDo];\r\n      localStorage.setItem(\"dataTasks\", JSON.stringify(tempNewMemory));\r\n    }\r\n  };\r\n\r\n  const setUpdate = (updatedTitle, id) => {\r\n    setTodoList((prevState) => {\r\n      let newState = prevState.map((toDoItem) => {\r\n        if (toDoItem.id === id) {\r\n          return {\r\n            ...toDoItem,\r\n            title: updatedTitle,\r\n          };\r\n        }\r\n        return toDoItem;\r\n      });\r\n\r\n      localStorage.setItem(\"dataTasks\", JSON.stringify(newState));\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  return (\r\n    \r\n        <div className=\"container\">\r\n          <div className=\"inner\">\r\n            <Header />\r\n            <InputToDo addTodoProps={addTodoItem} />\r\n            <ToDoList\r\n              data={todoList}\r\n              handleChangeProps={handleChange}\r\n              deleteTodoProps={deleteToDo}\r\n              setUpdateProps={setUpdate}\r\n            />\r\n          </div>\r\n        </div>\r\n     \r\n  );\r\n};\r\n\r\nexport default ToDoContainer;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useParams } from \"react-router-dom\"\r\n\r\nconst SinglePage = () => {\r\n    const aboutData = [\r\n        {\r\n          section: \"about-app\",\r\n          title: \"About the App\",\r\n          description:\r\n            \"In this app, you can add, delete, submit and edit items. To edit items, simply double click on it. Once you are done, press the enter key to resubmit. This app will persist your data in the browser local storage. So whether you reload, close your app or reopened it, you still have access to your to-dos items.\",\r\n        },\r\n        {\r\n          section: \"about-author\",\r\n          title: \"About the Author\",\r\n          description:\r\n            \"This app was developed by Ibas Majid, a self-taught web developer and a technical writer. He is opened to freelance Gig. So go ahead and connect with ibas on Twitter @ibaslogic.\",\r\n        },\r\n      ]\r\n\r\n    const { section } = useParams()\r\n    const aboutContent = aboutData.find(item => item.section === section)\r\n    const { title, description } = aboutContent\r\n\r\n\r\n    return (\r\n        <div className=\"main__content\">\r\n          <h1>{title}</h1>\r\n          <p>{description}</p>\r\n        </div>\r\n      )\r\n  }\r\n  export default SinglePage","import { Route, Link, useRouteMatch } from 'react-router-dom';\r\nimport SinglePage from \"./SinglePage\"\r\n\r\n\r\nconst About = (props) => {\r\n  const { url, path } = useRouteMatch()\r\n  \r\n\r\n  return (\r\n    <div className=\"about__content\">\r\n      <ul className=\"about__list\">\r\n        <li>\r\n          <Link to={`${url}/about-app`}>About App</Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${url}/about-author`}>About Author</Link>\r\n        </li>\r\n      </ul>\r\n      <Route path={`${path}/:section`}>\r\n        <SinglePage />\r\n      </Route>\r\n    </div>\r\n  )\r\n}\r\nexport default About","const NotMatch = () => {\r\n    return (\r\n      <div>\r\n        <h3>No match for this page</h3>\r\n      </div>\r\n    )\r\n  }\r\n  export default NotMatch","import { NavLink } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport { FiMenu } from \"react-icons/fi\";\r\n\r\nconst Navbar = () => {\r\n  const [navbarOpen, setNavbarOpen] = useState(false);\r\n\r\n  const links = [\r\n    {\r\n      id: 1,\r\n      path: \"/\",\r\n      text: \"Home\",\r\n    },\r\n    {\r\n      id: 2,\r\n      path: \"/about\",\r\n      text: \"About\",\r\n    },\r\n  ];\r\n\r\n  const handleToggle = () => {\r\n    setNavbarOpen(!navbarOpen);\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setNavbarOpen(false);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navBar\">\r\n      <button onClick={handleToggle}>\r\n        {navbarOpen ? (\r\n          <MdClose style={{ color: \"#fff\", width: \"30px\", height: \"30px\" }} />\r\n        ) : (\r\n          <FiMenu style={{ color: \"#7b7b7b\", width: \"30px\", height: \"30px\" }} />\r\n        )}\r\n      </button>\r\n\r\n      <ul className={`menuNav ${navbarOpen ? \" showMenu\" : \"\"}`}>\r\n        {links.map((link) => {\r\n          return (\r\n            <li key={link.id}>\r\n              <NavLink\r\n                activeclassname=\"active-link\"\r\n                to={link.path}\r\n                onClick={() => closeMenu()}\r\n              >\r\n                {link.text}\r\n              </NavLink>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport ToDoContainer from \"./components/ToDoContainer\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport About from \"./pages/About\";\nimport NotMatch from \"./pages/NotMatch\";\nimport Navbar from \"./components/Navbar\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <Navbar/>\n      <Switch>\n        <Route basename={process.env.PUBLIC_URL} component={ToDoContainer} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"*\" component={NotMatch} />\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}